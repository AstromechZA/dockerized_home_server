#!/usr/bin/python2.7

import json
import os
import shutil
import sys
import subprocess
import time


SUPERVISORD_CONF = '/etc/supervisor/conf.d/supervisord.conf'
SETTINGS_DIR = '/etc/transmission-daemon'
SETTINGS_FILE = os.path.join(SETTINGS_DIR, 'settings.json')

def chmod_dir(directory, user, (dirperm, filperm)):
    print "Chowning and Chmodding '%s' to '%s'.." % (directory, user)
    output = subprocess.check_output(['chown', '-R', '%s:%s' % (user, user), directory])
    for root, dirnames, filenames in os.walk(directory):
        for dn in dirnames:
            os.chmod(os.path.join(root, dn), dirperm)
        for fn in filenames:
            os.chmod(os.path.join(root, fn), filperm)
    print "Done."

def log(message, *args):
    print "{} : {}".format(__file__, message.format(*args))

def halt(message):
    log("ERROR {}", message)
    sys.exit(1)

if __name__ == '__main__':

    # load up environment variables
    try:
        DOWNLOADER_USR = os.environ['DOWNLOADER_USR']
        DOWNLOADER_UID = os.environ['DOWNLOADER_UID']
    except KeyError as e:
        print >> sys.stderr, "Missing environment variable " + e.message
        sys.exit(1)

    try:
        DOWNLOADER_UID = int(DOWNLOADER_UID)
    except (AssertionError, ValueError) as e:
        print >> sys.stderr, "Bad environment variable " + e.message
        sys.exit(1)

    # first the public user and dir
    print "creating user", DOWNLOADER_USR, DOWNLOADER_UID
    subprocess.check_call(['adduser', '-D', '-u', str(DOWNLOADER_UID), '-s', '/bin/false', DOWNLOADER_USR])

    # create and chmod dirs
    chmod_dir('/t/downloads', DOWNLOADER_USR, (0755, 0644))
    chmod_dir('/t/incomplete', DOWNLOADER_USR, (0755, 0644))

    log('injecting port/password config')

    # backup settings file
    new_file_name = SETTINGS_FILE + '.%d' % time.time()
    log("backing up settings.json to {}", new_file_name)
    shutil.copyfile(SETTINGS_FILE, new_file_name)

    with open(SETTINGS_FILE, 'r') as f:
        current_settings = json.loads(f.read())

    if 'WEBUI_PASSWORD' in os.environ and os.environ['WEBUI_PASSWORD']:
        if os.environ['WEBUI_PASSWORD'] == 'changeme':
            halt("WEBUI_PASSWORD value was 'changeme' it must be changed!\n"
                 "Please specify '-e WEBUI_PASSWORD=xxxxx' when launching the container.")
        current_settings['rpc-password'] = os.environ['WEBUI_PASSWORD']

    with open(SETTINGS_FILE, 'w') as f:
        f.write(json.dumps(current_settings))

    log("injecting user into supervisord")

    with open(SUPERVISORD_CONF, 'r') as f:
        content = f.read()
    content = content.replace('%injectuser%', DOWNLOADER_USR)
    with open(SUPERVISORD_CONF, 'w') as f:
        f.write(content)

    log('done')
